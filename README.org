#+TITLE: Functional Region Enrichment Analysis
#+DATE:
#+AUTHOR: Abhishek Sarkar
#+EMAIL: aksarkar@mit.edu
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t c:nil
#+OPTIONS: creator:comment d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t
#+OPTIONS: num:nil p:nil pri:nil stat:t tags:t tasks:t tex:t timestamp:t toc:t
#+OPTIONS: todo:t |:t
#+CREATOR: Emacs 24.5.1 (Org mode 8.2.10)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export

This repository provides the R package implementing part of the analyses
presented in:

- Sarkar, A. K., Ward, L. D., & Kellis, M. (2016). Functional enrichments of
  disease variants across thousands of independent loci in eight diseases.
  bioRxiv. http://dx.doi.org/10.1101/048066

The Python package is available from http://www.github.com/aksarkar/frea. The
computational pipeline described in the text (which utilizes these packages) is
available from http://www.github.com/aksarkar/frea-pipeline

* Installation

#+BEGIN_SRC sh
R <<EOF
devtools::install_github('aksarkar/frea')
EOF
#+END_SRC

  The R package requires:

  - R > 3.1
  - Cairo
  - devtools
  - dplyr
  - ggplot2
  - gtable
  - plyr
  - reshape2
  - scales

* Commentary

The design of the packages is based on several ideas, which are dependent on
the characteristics of the compute environment they were developed in (Univa
Grid Engine, relatively strict memory limits, but many compute nodes):

1. Use independent Python processes to distribute work in massively parallel
   fashion across compute nodes (using mechanisms outside of Python such as GNU
   parallel)
2. Use streaming algorithms wherever possible, building as few intermediate
   data structures as needed
3. Invoke modules as scripts (python -m) for entry points wherever possible
4. Use R to produce visualizations
